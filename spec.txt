Protocol spec of "mqks" - Message Queue Kept Simple.

Client connects to Server and sends one text line per request:
    {request_id} {action} {data}

Server may respond from zero to many times for the same "request_id":
    {request_id} ok {data}

When Server detects an error, it logs "error_id" with details, and responds to Client:
    {request_id} error {error_id}

Unique "request_id"-s are used in role of "msg_id", "consumer_id", etc - to reduce complexity and increase performance.

Main actions:

    Request                                                 Responses  // Comments

    {msg_id} publish {event} {data}                         {none}
    {request_id} subscribe {queue} {event1} ...             {none}
    {consumer_id} consume {queue}                           {consumer_id} ok {msg_id} event={event}[,retry={n}] {data}
    {request_id} delete_consumer {consumer_id}              {none}
    {request_id} delete_queue {queue}                       {none}  // Delete queue instantly.
    {request_id} delete_queue {queue} --when-unused         {none}  // Schedule delete when queue is unused by consumers.
    {request_id} delete_queue {queue} --when-unused=5       {none}  // Schedule delete when queue is unused by consumers for 5 seconds.
    {request_id} ping {data}                                {request_id} ok {data}

Manual acknowledgement:

    Request                                                 Responses

    {consumer_id} consume {queue} --manual-ack              {consumer_id} ok {msg_id} event={event}[,retry={n}] {data}
    {request_id} ack {consumer_id} {msg_id}                 {none}
    {request_id} ack {consumer_id} --all                    {none}
    {request_id} reject {consumer_id} {msg_id}              {none}
    {request_id} reject {consumer_id} --all                 {none}

If consumer with manual-ack disconnects, all not-acked messages are automatically rejected - returned to the queue.
Consuming in manual-ack mode spends more resources, so avoid it when possible for best performance:

    normal mode:        30 000 messages published/consumed in       1.080 seconds.
    manual-ack mode:    30 000 messages published/consumed/acked in 1.733 seconds.
